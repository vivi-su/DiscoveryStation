{"version":3,"sources":["src/components/Alignment.ts","src/components/Animation.ts","src/components/Axis.ts","src/components/Limit.ts","src/components/Counter.ts","src/components/Direction.ts","src/components/EventStore.ts","src/components/Vector1d.ts","src/components/utils.ts","src/components/DragHandler.ts","src/components/DragTracker.ts","src/components/PxToPercent.ts","src/components/ScrollBody.ts","src/components/ScrollBounds.ts","src/components/ScrollContain.ts","src/components/ScrollLimit.ts","src/components/ScrollLooper.ts","src/components/ScrollProgress.ts","src/components/ScrollSnap.ts","src/components/ScrollTarget.ts","src/components/ScrollTo.ts","src/components/SlideLooper.ts","src/components/SlideFocus.ts","src/components/SlidesInView.ts","src/components/SlideSizes.ts","src/components/Translate.ts","src/components/Engine.ts","src/components/EventEmitter.ts","src/components/Options.ts","src/components/OptionsPseudo.ts","src/components/index.ts","src/js/autoplay.js","src/js/prevAndNextButtons.js","src/js/index.js"],"names":["Alignment","align","viewSize","predefined","start","center","end","n","percent","Number","measure","self","Animation","callback","animationFrame","ifAnimating","active","cb","window","requestAnimationFrame","stop","cancelAnimationFrame","proceed","Axis","axis","contentDirection","scroll","cross","startEdge","getStartEdge","endEdge","getEndEdge","measureSize","rect","width","height","Limit","min","max","length","Math","abs","reachedMin","reachedMax","reachedAny","constrain","removeOffset","ceil","Counter","loop","_a","loopEnd","counter","withinLimit","get","set","add","clone","Direction","direction","sign","applyTo","EventStore","listeners","node","type","handler","options","addEventListener","push","removeEventListener","removeAll","filter","remove","Vector1D","value","vector","readNumber","subtract","multiply","divide","normalize","map","iStart","iStop","oStart","oStop","mathSign","deltaAbs","valueB","valueA","factorAbs","diff","roundToDecimals","decimalPoints","pow","round","debounce","time","timeout","clearTimeout","setTimeout","groupArray","array","size","groups","i","slice","arrayKeys","Object","keys","arrayLast","lastIndex","removeClass","className","cl","classList","contains","addClass","DragHandler","rootNode","target","dragFree","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","index","events","skipSnaps","scrollAxis","crossAxis","focusNodes","startScroll","startCross","dragStartPoint","activationEvents","interactionEvents","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","baseMass","dragThreshold","pointerIsDown","preventScroll","preventClick","isMouse","addActivationEvents","undefined","down","up","click","addInteractionEvents","document","move","removeAllEvents","isFocusNode","name","nodeName","indexOf","forceBoost","boost","allowedForce","force","targetChanged","next","isEdge","baseForce","byDistance","distance","byIndex","evt","button","isMoving","clearPreventClick","isNotFocusNode","preventDefault","pointerDown","useBaseMass","useSpeed","readPoint","emit","cancelable","moveScroll","moveCross","diffScroll","diffCross","pointerMove","currentLocation","rawForce","pointerUp","forceFactor","isVigorous","isBelowThreshold","speed","mass","useMass","clickAllowed","DragTracker","pxToPercent","coords","x","y","startDrag","diffDrag","lastDrag","pointValue","trackInterval","trackLength","trackTime","trackPoints","lastMoveTime","Date","getTime","touches","c","point","nowTime","diffTime","currentPoint","trackPoint","sort","p1","p2","PxToPercent","viewInPx","totalPercent","ScrollBody","roundToTwoDecimals","velocity","acceleration","attraction","attractionDirection","update","applyForce","v","seek","magnitude","settle","hasSettled","useBaseSpeed","ScrollBounds","limit","pullBackThreshold","disabled","shouldConstrain","friction","diffToTarget","toggleActive","ScrollContain","contentSize","snaps","snapsAligned","containScroll","scrollBounds","snapsBounded","snapsContained","measureContained","findDuplicates","startSnap","endSnap","lastIndexOf","ScrollLimit","scrollSnaps","measureLimit","ScrollLooper","vectors","shouldLoop","loopDistance","forEach","ScrollProgress","scrollLength","ScrollSnap","alignment","containerRect","slideRects","slidesToScroll","measureUnaligned","measureAligned","measureSizes","rects","snap","groupedSnaps","g","alignments","ScrollTarget","targetVector","minDistance","d1","d2","findTargetSnap","ascDiffsToSnaps","scrollSnap","diffToSnap","shortcut","t1","t2","t3","shortest","targetSnapDistance","reachedBound","snapDistance","ScrollTo","indexCurrent","indexPrevious","distanceDiff","indexDiff","targetIndex","SlideLooper","slideSizesWithGaps","slidesInView","scrollLocation","slides","ascItems","descItems","reverse","loopPoints","startPoints","concat","endPoints","removeSlideSizes","indexes","from","reduce","a","slidesInGap","gap","remainingGap","findLoopPoints","edge","isStartEdge","offset","slideBounds","findSlideBounds","initial","altered","bounds","b","getTarget","canLoop","every","otherIndexes","loopPoint","style","clear","SlideFocus","eventStore","lastTabPressTime","registerTabPress","event","keyCode","addFocusEvent","slide","focus","scrollLeft","selectedIndex","floor","SlidesInView","slideSizes","inViewThreshold","threshold","offsets","thresholds","s","check","list","slideBound","inList","inView","SlideSizes","sizesInPx","measureWithGaps","isLast","getComputedStyle","endGap","parseFloat","getPropertyValue","Translate","container","containerStyle","translate","to","transform","Engine","root","startIndex","getBoundingClientRect","_b","contain","slideIndexes","engine","dragHandler","settled","scrollLooper","slideLooper","startLocation","scrollProgress","slideFocus","EventEmitter","getListeners","eventListeners","e","on","off","defaultOptions","draggable","draggableClass","draggingClass","selectedClass","OptionsPseudo","pseudoString","content","JSON","parse","replace","error","EmblaCarousel","sliderRoot","userOptions","debouncedResize","resize","reInit","reActivate","activated","optionsBase","optionsPseudo","rootNodeSize","activate","setupElements","Error","sliderContainer","querySelector","Array","prototype","call","children","partialOptions","deActivate","offsetParent","toggleDraggingClass","toggleSelectedClass","notInView","slidesNotInView","selectedScrollSnap","newOptions","destroy","jump","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","scrollSnapList","previousScrollSnap","dangerouslyGetEngine","containerNode","slideNodes","autoplay","embla","interval","timer","play","listenForPrevBtnClick","btn","autoplayer","listenForNextBtnClick","disablePrevNextBtns","prevBtn","nextBtn","removeAttribute","setAttribute","wrap","viewPort","disablePrevAndNextBtns"],"mappings":"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","file":"js.1839583e.js","sourceRoot":"..","sourcesContent":["export type AlignmentOptionType = 'start' | 'center' | 'end' | number\n\nexport type AlignmentType = {\n  measure: (n: number) => number\n}\n\nexport function Alignment(\n  align: AlignmentOptionType,\n  viewSize: number,\n): AlignmentType {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function percent(): number {\n    return viewSize * Number(align)\n  }\n\n  function measure(n: number): number {\n    if (typeof align === 'number') return percent()\n    return predefined[align](n)\n  }\n\n  const self: AlignmentType = {\n    measure,\n  }\n  return self\n}\n","type CallbackType = () => void\n\nexport type AnimationType = {\n  start: () => void\n  stop: () => void\n  proceed: () => void\n}\n\nexport function Animation(callback: FrameRequestCallback): AnimationType {\n  let animationFrame = 0\n\n  function ifAnimating(active: boolean, cb: CallbackType): CallbackType {\n    return (): void => {\n      if (active === !!animationFrame) cb()\n    }\n  }\n\n  function start(): void {\n    animationFrame = window.requestAnimationFrame(callback)\n  }\n\n  function stop(): void {\n    window.cancelAnimationFrame(animationFrame)\n    animationFrame = 0\n  }\n\n  const self: AnimationType = {\n    proceed: ifAnimating(true, start),\n    start: ifAnimating(false, start),\n    stop: ifAnimating(true, stop),\n  }\n  return self\n}\n","import { DirectionOptionType } from './Direction'\n\nexport type AxisOptionType = 'x' | 'y'\ntype AxisEdgeType = 'top' | 'right' | 'bottom' | 'left'\n\nexport type AxisType = {\n  scroll: AxisOptionType\n  cross: AxisOptionType\n  startEdge: AxisEdgeType\n  endEdge: AxisEdgeType\n  measureSize: (rect: DOMRect) => number\n}\n\nexport function Axis(\n  axis: AxisOptionType,\n  contentDirection: DirectionOptionType,\n): AxisType {\n  const scroll = axis === 'y' ? 'y' : 'x'\n  const cross = axis === 'y' ? 'x' : 'y'\n  const startEdge = getStartEdge()\n  const endEdge = getEndEdge()\n\n  function measureSize(rect: DOMRect): number {\n    const { width, height } = rect\n    return scroll === 'x' ? width : height\n  }\n\n  function getStartEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'top'\n    return contentDirection === 'rtl' ? 'right' : 'left'\n  }\n\n  function getEndEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'bottom'\n    return contentDirection === 'rtl' ? 'left' : 'right'\n  }\n\n  const self: AxisType = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize,\n  }\n  return self\n}\n","export type LimitType = {\n  min: number\n  max: number\n  length: number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(min: number, max: number): LimitType {\n  const length = Math.abs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  const self: LimitType = {\n    constrain,\n    length,\n    max,\n    min,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset,\n  }\n  return self\n}\n","import { Limit } from './Limit'\n\nexport type CounterType = {\n  get: () => number\n  set: (n: number) => CounterType\n  add: (n: number) => CounterType\n  clone: () => CounterType\n  min: number\n  max: number\n}\n\nexport function Counter(\n  max: number,\n  start: number,\n  loop: boolean,\n): CounterType {\n  const { min, constrain } = Limit(0, max)\n  const loopEnd = max + 1\n  let counter = withinLimit(start)\n\n  function withinLimit(n: number): number {\n    return !loop ? constrain(n) : Math.abs((loopEnd + n) % loopEnd)\n  }\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): CounterType {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): CounterType {\n    return set(get() + n)\n  }\n\n  function clone(): CounterType {\n    return Counter(max, get(), loop)\n  }\n\n  const self: CounterType = {\n    add,\n    clone,\n    get,\n    set,\n    min,\n    max,\n  }\n  return self\n}\n","export type DirectionOptionType = 'ltr' | 'rtl'\n\nexport type DirectionType = {\n  applyTo: (n: number) => number\n}\n\nexport function Direction(direction: DirectionOptionType): DirectionType {\n  const sign = direction === 'rtl' ? -1 : 1\n\n  function applyTo(n: number): number {\n    return n * sign\n  }\n\n  const self: DirectionType = {\n    applyTo,\n  }\n  return self\n}\n","type EventRemoverType = () => void\ntype EventHandlerType = EventListener | EventListenerObject | null\ntype EventOptionsType = boolean | AddEventListenerOptions | undefined\n\nexport type EventStoreType = {\n  add: (\n    node: EventTarget,\n    type: keyof WindowEventMap,\n    handler: EventHandlerType,\n    options?: EventOptionsType,\n  ) => EventStoreType\n  removeAll: () => EventStoreType\n}\n\nexport function EventStore(): EventStoreType {\n  let listeners: EventRemoverType[] = []\n\n  function add(\n    node: EventTarget,\n    type: string,\n    handler: EventHandlerType,\n    options: EventOptionsType = false,\n  ): EventStoreType {\n    node.addEventListener(type, handler, options)\n    listeners.push(() => {\n      return node.removeEventListener(type, handler, options)\n    })\n    return self\n  }\n\n  function removeAll(): EventStoreType {\n    listeners = listeners.filter((remove) => remove())\n    return self\n  }\n\n  const self: EventStoreType = {\n    add,\n    removeAll,\n  }\n  return self\n}\n","export type Vector1DType = {\n  get: () => number\n  set: (v: Vector1DType | number) => Vector1DType\n  add: (v: Vector1DType | number) => Vector1DType\n  subtract: (v: Vector1DType | number) => Vector1DType\n  multiply: (n: number) => Vector1DType\n  divide: (n: number) => Vector1DType\n  normalize: () => Vector1DType\n}\n\nexport function Vector1D(value: number): Vector1DType {\n  let vector = value\n\n  function get(): number {\n    return vector\n  }\n\n  function set(n: Vector1DType | number): Vector1DType {\n    vector = readNumber(n)\n    return self\n  }\n\n  function add(n: Vector1DType | number): Vector1DType {\n    vector += readNumber(n)\n    return self\n  }\n\n  function subtract(n: Vector1DType | number): Vector1DType {\n    vector -= readNumber(n)\n    return self\n  }\n\n  function multiply(n: number): Vector1DType {\n    vector *= n\n    return self\n  }\n\n  function divide(n: number): Vector1DType {\n    vector /= n\n    return self\n  }\n\n  function normalize(): Vector1DType {\n    if (vector !== 0) divide(vector)\n    return self\n  }\n\n  function readNumber(n: Vector1DType | number): number {\n    return typeof n === 'number' ? n : n.get()\n  }\n\n  const self: Vector1DType = {\n    add,\n    divide,\n    get,\n    multiply,\n    normalize,\n    set,\n    subtract,\n  }\n  return self\n}\n","export function map(\n  value: number,\n  iStart: number,\n  iStop: number,\n  oStart: number,\n  oStop: number,\n): number {\n  return oStart + (oStop - oStart) * ((value - iStart) / (iStop - iStart))\n}\n\nexport function mathSign(n: number): number {\n  return !n ? 0 : n / Math.abs(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return Math.abs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (Math.abs(valueB) <= Math.abs(valueA)) return 0\n  const diff = deltaAbs(Math.abs(valueB), Math.abs(valueA))\n  return Math.abs(diff / valueB)\n}\n\nexport function roundToDecimals(decimalPoints: number): (n: number) => number {\n  const pow = Math.pow(10, decimalPoints)\n  return (n: number): number => Math.round(n * pow) / pow\n}\n\nexport function debounce(callback: () => void, time: number): () => void {\n  let timeout = 0\n  return (): void => {\n    window.clearTimeout(timeout)\n    timeout = window.setTimeout(callback, time) || 0\n  }\n}\n\nexport function groupArray<GenericType>(\n  array: GenericType[],\n  size: number,\n): GenericType[][] {\n  const groups = []\n  for (let i = 0; i < array.length; i += size) {\n    groups.push(array.slice(i, i + size))\n  }\n  return groups\n}\n\nexport function arrayKeys<GenericType>(array: GenericType[]): number[] {\n  return Object.keys(array).map(Number)\n}\n\nexport function arrayLast<GenericType>(array: GenericType[]): GenericType {\n  return array[lastIndex(array)]\n}\n\nexport function lastIndex<GenericType>(array: GenericType[]): number {\n  return Math.max(0, array.length - 1)\n}\n\nexport function removeClass(node: HTMLElement, className: string): void {\n  const cl = node.classList\n  if (className && cl.contains(className)) cl.remove(className)\n}\n\nexport function addClass(node: HTMLElement, className: string): void {\n  const cl = node.classList\n  if (className && !cl.contains(className)) cl.add(className)\n}\n","import { AnimationType } from './Animation'\nimport { CounterType } from './Counter'\nimport { DirectionType } from './Direction'\nimport { DragTrackerType } from './DragTracker'\nimport { EventEmitterType } from './EventEmitter'\nimport { AxisType } from './Axis'\nimport { EventStore } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType } from './ScrollTarget'\nimport { ScrollToType } from './ScrollTo'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { deltaAbs, factorAbs, mathSign } from './utils'\n\nexport type DragHandlerType = {\n  addActivationEvents: () => void\n  clickAllowed: () => boolean\n  pointerDown: () => boolean\n  removeAllEvents: () => void\n}\n\nexport function DragHandler(\n  axis: AxisType,\n  direction: DirectionType,\n  rootNode: HTMLElement,\n  target: Vector1DType,\n  dragFree: boolean,\n  dragTracker: DragTrackerType,\n  location: Vector1DType,\n  animation: AnimationType,\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  index: CounterType,\n  events: EventEmitterType,\n  loop: boolean,\n  skipSnaps: boolean,\n): DragHandlerType {\n  const { scroll: scrollAxis, cross: crossAxis } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const startScroll = Vector1D(0)\n  const startCross = Vector1D(0)\n  const dragStartPoint = Vector1D(0)\n  const activationEvents = EventStore()\n  const interactionEvents = EventStore()\n  const snapForceBoost = { mouse: 2.5, touch: 3.5 }\n  const freeForceBoost = { mouse: 5, touch: 7 }\n  const baseSpeed = dragFree ? 5 : 16\n  const baseMass = 1\n  const dragThreshold = 20\n\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function addActivationEvents(): void {\n    const node = rootNode\n    activationEvents\n      .add(node, 'touchmove', () => undefined)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', down)\n      .add(node, 'mousedown', down)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click)\n  }\n\n  function addInteractionEvents(): void {\n    const node = !isMouse ? rootNode : document\n    interactionEvents\n      .add(node, 'touchmove', move)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move)\n      .add(node, 'mouseup', up)\n  }\n\n  function removeAllEvents(): void {\n    activationEvents.removeAll()\n    interactionEvents.removeAll()\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const name = node.nodeName || ''\n    return focusNodes.indexOf(name) > -1\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number, targetChanged: boolean): number {\n    const next = index.clone().add(mathSign(force) * -1)\n    const isEdge = next.get() === index.min || next.get() === index.max\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance\n\n    if (dragFree || Math.abs(force) < dragThreshold) return baseForce\n    if (!loop && isEdge) return baseForce * 0.6\n    if (skipSnaps && targetChanged) return baseForce * 0.5\n\n    return scrollTarget.byIndex(next.get(), 0).distance\n  }\n\n  function down(evt: Event): void {\n    isMouse = evt.type === 'mousedown'\n    if (isMouse && (evt as MouseEvent).button !== 0) return\n\n    const isMoving = deltaAbs(target.get(), location.get()) >= 2\n    const clearPreventClick = isMouse || !isMoving\n    const isNotFocusNode = !isFocusNode(evt.target as Element)\n    const preventDefault = isMoving || (isMouse && isNotFocusNode)\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    dragStartPoint.set(target)\n    target.set(location)\n    scrollBody.useBaseMass().useSpeed(80)\n    addInteractionEvents()\n    startScroll.set(dragTracker.readPoint(evt, scrollAxis))\n    startCross.set(dragTracker.readPoint(evt, crossAxis))\n    events.emit('pointerDown')\n\n    if (clearPreventClick) preventClick = false\n    if (preventDefault) evt.preventDefault()\n  }\n\n  function move(evt: Event): void {\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up()\n      const moveScroll = dragTracker.readPoint(evt, scrollAxis).get()\n      const moveCross = dragTracker.readPoint(evt, crossAxis).get()\n      const diffScroll = deltaAbs(moveScroll, startScroll.get())\n      const diffCross = deltaAbs(moveCross, startCross.get())\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll && !preventClick) return up()\n    }\n    const diff = dragTracker.pointerMove(evt)\n    if (!preventClick && diff) preventClick = true\n    animation.start()\n    target.add(direction.applyTo(diff))\n    evt.preventDefault()\n  }\n\n  function up(): void {\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const rawForce = dragTracker.pointerUp() * forceBoost()\n    const force = allowedForce(direction.applyTo(rawForce), targetChanged)\n    const forceFactor = factorAbs(rawForce, force)\n    const isMoving = deltaAbs(target.get(), dragStartPoint.get()) >= 0.5\n    const isVigorous = targetChanged && forceFactor > 0.75\n    const isBelowThreshold = Math.abs(rawForce) < dragThreshold\n    const speed = isVigorous ? 10 : baseSpeed\n    const mass = isVigorous ? baseMass + 2.5 * forceFactor : baseMass\n\n    if (isMoving && !isMouse) preventClick = true\n    preventScroll = false\n    pointerIsDown = false\n    interactionEvents.removeAll()\n    scrollBody.useSpeed(isBelowThreshold ? 9 : speed).useMass(mass)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    events.emit('pointerUp')\n  }\n\n  function click(evt: Event): void {\n    if (preventClick) evt.preventDefault()\n  }\n\n  function clickAllowed(): boolean {\n    return !preventClick\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandlerType = {\n    addActivationEvents,\n    clickAllowed,\n    pointerDown,\n    removeAllEvents,\n  }\n  return self\n}\n","import { AxisOptionType, AxisType } from './Axis'\nimport { PxToPercentType } from './PxToPercent'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type DragTrackerType = {\n  pointerDown: (evt: Event) => number\n  pointerMove: (evt: Event) => number\n  pointerUp: () => number\n  readPoint: (evt: any, axis: AxisOptionType) => Vector1DType\n}\n\nexport function DragTracker(\n  axis: AxisType,\n  pxToPercent: PxToPercentType,\n): DragTrackerType {\n  const { scroll: scrollAxis } = axis\n  const coords = { x: 'clientX', y: 'clientY' }\n  const startDrag = Vector1D(0)\n  const diffDrag = Vector1D(0)\n  const lastDrag = Vector1D(0)\n  const pointValue = Vector1D(0)\n  const trackInterval = 10\n  const trackLength = 5\n  const trackTime = 100\n  let trackPoints: number[] = []\n  let lastMoveTime = new Date().getTime()\n  let isMouse = false\n\n  function readPoint(evt: any, type: AxisOptionType): Vector1DType {\n    isMouse = !evt.touches\n    const c = coords[type]\n    const value = isMouse ? evt[c] : evt.touches[0][c]\n    return pointValue.set(value)\n  }\n\n  function pointerDown(evt: Event): number {\n    const point = readPoint(evt, scrollAxis)\n    startDrag.set(point)\n    lastDrag.set(point)\n    return pxToPercent.measure(startDrag.get())\n  }\n\n  function pointerMove(evt: Event): number {\n    const point = readPoint(evt, scrollAxis)\n    const nowTime = new Date().getTime()\n    const diffTime = nowTime - lastMoveTime\n\n    if (diffTime >= trackInterval) {\n      if (diffTime >= trackTime) trackPoints = []\n      trackPoints.push(point.get())\n      lastMoveTime = nowTime\n    }\n\n    diffDrag.set(point).subtract(lastDrag)\n    lastDrag.set(point)\n    return pxToPercent.measure(diffDrag.get())\n  }\n\n  function pointerUp(): number {\n    const nowTime = new Date().getTime()\n    const diffTime = nowTime - lastMoveTime\n    const currentPoint = lastDrag.get()\n\n    const force = trackPoints\n      .slice(-trackLength)\n      .map((trackPoint) => currentPoint - trackPoint)\n      .sort((p1, p2) => (Math.abs(p1) < Math.abs(p2) ? 1 : -1))[0]\n\n    lastDrag.set(diffTime > trackTime || !force ? 0 : force)\n    trackPoints = []\n    return pxToPercent.measure(lastDrag.get())\n  }\n\n  const self: DragTrackerType = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint,\n  }\n  return self\n}\n","export type PxToPercentType = {\n  measure: (n: number) => number\n  totalPercent: number\n}\n\nexport function PxToPercent(viewInPx: number): PxToPercentType {\n  const totalPercent = 100\n\n  function measure(n: number): number {\n    if (viewInPx === 0) return 0\n    return (n / viewInPx) * totalPercent\n  }\n\n  const self: PxToPercentType = {\n    measure,\n    totalPercent,\n  }\n  return self\n}\n","import { map, roundToDecimals, mathSign } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type ScrollBodyType = {\n  direction: () => number\n  seek: (v: Vector1DType) => ScrollBodyType\n  settle: (v: Vector1DType) => boolean\n  update: () => void\n  useBaseMass: () => ScrollBodyType\n  useBaseSpeed: () => ScrollBodyType\n  useMass: (n: number) => ScrollBodyType\n  useSpeed: (n: number) => ScrollBodyType\n}\n\nexport function ScrollBody(\n  location: Vector1DType,\n  baseSpeed: number,\n  baseMass: number,\n): ScrollBodyType {\n  const roundToTwoDecimals = roundToDecimals(2)\n  const velocity = Vector1D(0)\n  const acceleration = Vector1D(0)\n  const attraction = Vector1D(0)\n\n  let attractionDirection = 0\n  let speed = baseSpeed\n  let mass = baseMass\n\n  function update(): void {\n    velocity.add(acceleration)\n    location.add(velocity)\n    acceleration.multiply(0)\n  }\n\n  function applyForce(v: Vector1DType): void {\n    v.divide(mass)\n    acceleration.add(v)\n  }\n\n  function seek(v: Vector1DType): ScrollBodyType {\n    attraction.set(v).subtract(location)\n    const magnitude = map(attraction.get(), 0, 100, 0, speed)\n    attractionDirection = mathSign(attraction.get())\n    attraction.normalize().multiply(magnitude).subtract(velocity)\n    applyForce(attraction)\n    return self\n  }\n\n  function settle(v: Vector1DType): boolean {\n    const diff = v.get() - location.get()\n    const hasSettled = !roundToTwoDecimals(diff)\n    if (hasSettled) location.set(v)\n    return hasSettled\n  }\n\n  function direction(): number {\n    return attractionDirection\n  }\n\n  function useBaseSpeed(): ScrollBodyType {\n    return useSpeed(baseSpeed)\n  }\n\n  function useBaseMass(): ScrollBodyType {\n    return useMass(baseMass)\n  }\n\n  function useSpeed(n: number): ScrollBodyType {\n    speed = n\n    return self\n  }\n\n  function useMass(n: number): ScrollBodyType {\n    mass = n\n    return self\n  }\n\n  const self: ScrollBodyType = {\n    direction,\n    seek,\n    settle,\n    update,\n    useBaseMass,\n    useBaseSpeed,\n    useMass,\n    useSpeed,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { ScrollBodyType } from './ScrollBody'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollBoundsType = {\n  constrain: (pointerDown: boolean) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(\n  limit: LimitType,\n  location: Vector1DType,\n  target: Vector1DType,\n  scrollBody: ScrollBodyType,\n): ScrollBoundsType {\n  const pullBackThreshold = 10\n  let disabled = false\n\n  function shouldConstrain(): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(target.get())) return false\n    if (!limit.reachedAny(location.get())) return false\n    return true\n  }\n\n  function constrain(pointerDown: boolean): void {\n    if (!shouldConstrain()) return\n    const friction = pointerDown ? 0.7 : 0.45\n    const diffToTarget = target.get() - location.get()\n\n    target.subtract(diffToTarget * friction)\n\n    if (!pointerDown && Math.abs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()))\n      scrollBody.useSpeed(10).useMass(3)\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBoundsType = {\n    constrain,\n    toggleActive,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollContainOptionType = '' | 'trimSnaps' | 'keepSnaps'\n\nexport type ScrollContainType = {\n  snapsContained: number[]\n}\n\nexport function ScrollContain(\n  viewSize: number,\n  contentSize: number,\n  snaps: number[],\n  snapsAligned: number[],\n  containScroll: ScrollContainOptionType,\n): ScrollContainType {\n  const scrollBounds = Limit(-contentSize + viewSize, snaps[0])\n  const snapsBounded = snapsAligned.map(scrollBounds.constrain)\n  const snapsContained = measureContained()\n\n  function findDuplicates(): LimitType {\n    const startSnap = snapsBounded[0]\n    const endSnap = arrayLast(snapsBounded)\n    const min = snapsBounded.lastIndexOf(startSnap)\n    const max = snapsBounded.indexOf(endSnap) + 1\n    return Limit(min, max)\n  }\n\n  function measureContained(): number[] {\n    if (contentSize <= viewSize) return [scrollBounds.max]\n    if (containScroll === 'keepSnaps') return snapsBounded\n    const { min, max } = findDuplicates()\n    return snapsBounded.slice(min, max)\n  }\n\n  const self: ScrollContainType = {\n    snapsContained,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollLimitType = {\n  limit: LimitType\n}\n\nexport function ScrollLimit(\n  contentSize: number,\n  scrollSnaps: number[],\n  loop: boolean,\n): ScrollLimitType {\n  const limit = measureLimit()\n\n  function measureLimit(): LimitType {\n    const startSnap = scrollSnaps[0]\n    const endSnap = arrayLast(scrollSnaps)\n    const min = loop ? startSnap - contentSize : endSnap\n    const max = startSnap\n    return Limit(min, max)\n  }\n\n  const self: ScrollLimitType = {\n    limit,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { PxToPercentType } from './PxToPercent'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollLooperType = {\n  loop: (direction: number) => void\n}\n\nexport function ScrollLooper(\n  contentSize: number,\n  pxToPercent: PxToPercentType,\n  limit: LimitType,\n  location: Vector1DType,\n  vectors: Vector1DType[],\n): ScrollLooperType {\n  const min = limit.min + pxToPercent.measure(0.1)\n  const max = limit.max + pxToPercent.measure(0.1)\n  const { reachedMin, reachedMax } = Limit(min, max)\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(location.get())\n    if (direction === -1) return reachedMin(location.get())\n    return false\n  }\n\n  function loop(direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach((v) => v.add(loopDistance))\n  }\n\n  const self: ScrollLooperType = {\n    loop,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\n\nexport type ScrollProgressType = {\n  get: (n: number) => number\n}\n\nexport function ScrollProgress(limit: LimitType): ScrollProgressType {\n  const { max, length: scrollLength } = limit\n\n  function get(n: number): number {\n    const currentLocation = n - max\n    return currentLocation / -scrollLength\n  }\n\n  const self: ScrollProgressType = {\n    get,\n  }\n  return self\n}\n","import { AlignmentType } from './Alignment'\nimport { AxisType } from './Axis'\nimport { PxToPercentType } from './PxToPercent'\nimport { arrayLast, groupArray } from './utils'\n\nexport type ScrollSnapType = {\n  snaps: number[]\n  snapsAligned: number[]\n}\n\nexport function ScrollSnap(\n  axis: AxisType,\n  alignment: AlignmentType,\n  pxToPercent: PxToPercentType,\n  containerRect: DOMRect,\n  slideRects: DOMRect[],\n  slidesToScroll: number,\n): ScrollSnapType {\n  const { startEdge, endEdge } = axis\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  function measureSizes(): number[] {\n    return groupArray(slideRects, slidesToScroll)\n      .map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge])\n      .map(pxToPercent.measure)\n      .map(Math.abs)\n  }\n\n  function measureUnaligned(): number[] {\n    return slideRects\n      .map((rect) => containerRect[startEdge] - rect[startEdge])\n      .map(pxToPercent.measure)\n      .map((snap) => -Math.abs(snap))\n  }\n\n  function measureAligned(): number[] {\n    const groupedSnaps = groupArray(snaps, slidesToScroll).map((g) => g[0])\n    const alignments = measureSizes().map(alignment.measure)\n    return groupedSnaps.map((snap, index) => snap + alignments[index])\n  }\n\n  const self: ScrollSnapType = {\n    snaps,\n    snapsAligned,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\n\nexport type TargetType = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTargetType = {\n  byIndex: (target: number, direction: number) => TargetType\n  byDistance: (force: number, snap: boolean) => TargetType\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(\n  loop: boolean,\n  scrollSnaps: number[],\n  contentSize: number,\n  limit: LimitType,\n  targetVector: Vector1DType,\n): ScrollTargetType {\n  const { reachedAny, removeOffset, constrain } = limit\n\n  function minDistance(d1: number, d2: number): number {\n    return Math.abs(d1) < Math.abs(d2) ? d1 : d2\n  }\n\n  function findTargetSnap(target: number): TargetType {\n    const distance = loop ? removeOffset(target) : constrain(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map((scrollSnap) => scrollSnap - distance)\n      .map((diffToSnap) => shortcut(diffToSnap, 0))\n      .map((diff, i) => ({ diff, index: i }))\n      .sort((d1, d2) => Math.abs(d1.diff) - Math.abs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const t1 = target\n    const t2 = target + contentSize\n    const t3 = target - contentSize\n\n    if (!loop) return t1\n    if (!direction) return minDistance(minDistance(t1, t2), t3)\n\n    const shortest = minDistance(t1, direction === 1 ? t2 : t3)\n    return Math.abs(shortest) * direction\n  }\n\n  function byIndex(index: number, direction: number): TargetType {\n    const diffToSnap = scrollSnaps[index] - targetVector.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): TargetType {\n    const target = targetVector.get() + distance\n    const { index, distance: targetSnapDistance } = findTargetSnap(target)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTargetType = {\n    byDistance,\n    byIndex,\n    shortcut,\n  }\n  return self\n}\n","import { AnimationType } from './Animation'\nimport { CounterType } from './Counter'\nimport { EventEmitterType } from './EventEmitter'\nimport { ScrollTargetType, TargetType } from './ScrollTarget'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollToType = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(\n  animation: AnimationType,\n  indexCurrent: CounterType,\n  indexPrevious: CounterType,\n  scrollTarget: ScrollTargetType,\n  targetVector: Vector1DType,\n  events: EventEmitterType,\n): ScrollToType {\n  function scrollTo(target: TargetType): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    if (distanceDiff) {\n      animation.start()\n      targetVector.add(distanceDiff)\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      events.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollToType = {\n    distance,\n    index,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayKeys } from './utils'\nimport { SlidesInViewType } from './SlidesInView'\nimport { Vector1DType } from './Vector1d'\n\ntype EdgeType = 'start' | 'end'\n\ntype LoopPointType = {\n  point: number\n  location: number\n  index: number\n  getTarget: () => number\n}\n\nexport type SlideLooperType = {\n  canLoop: () => boolean\n  clear: () => void\n  loop: () => void\n  loopPoints: LoopPointType[]\n}\n\nexport function SlideLooper(\n  axis: AxisType,\n  viewSize: number,\n  contentSize: number,\n  slideSizesWithGaps: number[],\n  scrollSnaps: number[],\n  slidesInView: SlidesInViewType,\n  scrollLocation: Vector1DType,\n  slides: HTMLElement[],\n): SlideLooperType {\n  const ascItems = arrayKeys(slideSizesWithGaps)\n  const descItems = arrayKeys(slideSizesWithGaps).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizesWithGaps[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findLoopPoints(indexes: number[], edge: EdgeType): LoopPointType[] {\n    const isStartEdge = edge === 'start'\n    const offset = isStartEdge ? -contentSize : contentSize\n    const slideBounds = slidesInView.findSlideBounds(offset)\n\n    return indexes.map((index) => {\n      const initial = isStartEdge ? 0 : -contentSize\n      const altered = isStartEdge ? contentSize : 0\n      const bounds = slideBounds.filter((b) => b.index === index)[0]\n      const point = bounds[isStartEdge ? 'end' : 'start']\n      const getTarget = (): number =>\n        scrollLocation.get() > point ? initial : altered\n      return { point, getTarget, index, location: -1 }\n    })\n  }\n\n  function startPoints(): LoopPointType[] {\n    const gap = scrollSnaps[0] - 1\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, 'end')\n  }\n\n  function endPoints(): LoopPointType[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, 'start')\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter((i) => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0\n    })\n  }\n\n  function loop(): void {\n    loopPoints.forEach((loopPoint) => {\n      const { getTarget, location, index } = loopPoint\n      const target = getTarget()\n      if (target !== location) {\n        slides[index].style[axis.startEdge] = `${target}%`\n        loopPoint.location = target\n      }\n    })\n  }\n\n  function clear(): void {\n    loopPoints.forEach(({ index }) => {\n      slides[index].style[axis.startEdge] = ''\n    })\n  }\n\n  const self: SlideLooperType = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints,\n  }\n  return self\n}\n","import { EventStore, EventStoreType } from './EventStore'\nimport { ScrollToType } from './ScrollTo'\n\nexport type SlideFocusType = {\n  addActivationEvents: (slides: HTMLElement[]) => void\n  removeAllEvents: EventStoreType['removeAll']\n}\n\nexport function SlideFocus(\n  rootNode: HTMLElement,\n  scrollTo: ScrollToType,\n  slidesToScroll: number,\n): SlideFocusType {\n  const eventStore = EventStore()\n  const removeAllEvents = eventStore.removeAll\n  let lastTabPressTime = 0\n\n  function registerTabPress(event: Event): void {\n    if ((event as KeyboardEvent).keyCode !== 9) return\n    lastTabPressTime = new Date().getTime()\n  }\n\n  function addFocusEvent(slide: HTMLElement, index: number): void {\n    const focus = (): void => {\n      const nowTime = new Date().getTime()\n      const diffTime = nowTime - lastTabPressTime\n      if (diffTime > 10) return\n\n      rootNode.scrollLeft = 0\n      const selectedIndex = Math.floor(index / slidesToScroll)\n      scrollTo.index(selectedIndex, 0)\n    }\n    eventStore.add(slide, 'focus', focus, true)\n  }\n\n  function addActivationEvents(slides: HTMLElement[]): void {\n    eventStore.add(document, 'keydown', registerTabPress, false)\n    slides.forEach(addFocusEvent)\n  }\n\n  const self: SlideFocusType = {\n    addActivationEvents,\n    removeAllEvents,\n  }\n  return self\n}\n","type SlideBoundType = {\n  start: number\n  end: number\n  index: number\n}\n\nexport type SlidesInViewType = {\n  check: (location: number) => number[]\n  findSlideBounds: (offset: number, threshold?: number) => SlideBoundType[]\n}\n\nexport function SlidesInView(\n  viewSize: number,\n  contentSize: number,\n  slideSizes: number[],\n  snaps: number[],\n  loop: boolean,\n  inViewThreshold: number,\n): SlidesInViewType {\n  const threshold = Math.min(Math.max(inViewThreshold, 0.01), 0.99)\n  const offsets = loop ? [0, contentSize, -contentSize] : [0]\n  const slideBounds = offsets.reduce((a: SlideBoundType[], offset) => {\n    return a.concat(findSlideBounds(offset, threshold))\n  }, [])\n\n  function findSlideBounds(\n    offset: number,\n    threshold?: number,\n  ): SlideBoundType[] {\n    const thresholds = slideSizes.map((s) => s * (threshold || 0))\n    return snaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + thresholds[index] + offset,\n      end: snap + viewSize - thresholds[index] + offset,\n      index,\n    }))\n  }\n\n  function check(location: number): number[] {\n    return slideBounds.reduce((list: number[], slideBound) => {\n      const { index, start, end } = slideBound\n      const inList = list.indexOf(index) !== -1\n      const inView = start < location && end > location\n      return !inList && inView ? list.concat([index]) : list\n    }, [])\n  }\n\n  const self: SlidesInViewType = {\n    check,\n    findSlideBounds,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { PxToPercentType } from './PxToPercent'\nimport { arrayLast, lastIndex } from './utils'\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n}\n\nexport function SlideSizes(\n  axis: AxisType,\n  pxToPercent: PxToPercentType,\n  slides: HTMLElement[],\n  slideRects: DOMRect[],\n  loop: boolean,\n): SlideSizesType {\n  const { measureSize, startEdge, endEdge } = axis\n  const sizesInPx = slideRects.map(measureSize)\n  const slideSizes = sizesInPx.map(pxToPercent.measure)\n  const slideSizesWithGaps = measureWithGaps()\n\n  function measureWithGaps(): number[] {\n    return slideRects\n      .map((rect, index, rects) => {\n        const isLast = index === lastIndex(rects)\n        const style = window.getComputedStyle(arrayLast(slides))\n        const endGap = parseFloat(style.getPropertyValue(`margin-${endEdge}`))\n        if (isLast) return sizesInPx[index] + (loop ? endGap : 0)\n        return rects[index + 1][startEdge] - rect[startEdge]\n      })\n      .map(pxToPercent.measure)\n      .map(Math.abs)\n  }\n\n  const self: SlideSizesType = {\n    slideSizes,\n    slideSizesWithGaps,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { DirectionType } from './Direction'\nimport { Vector1DType } from './Vector1d'\n\nexport type TranslateType = {\n  clear: () => void\n  to: (vector: Vector1DType) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(\n  axis: AxisType,\n  direction: DirectionType,\n  container: HTMLElement,\n): TranslateType {\n  const containerStyle = container.style\n  const translate = axis.scroll === 'x' ? x : y\n  let disabled = false\n\n  function x(n: number): string {\n    return `translate3d(${n}%,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}%,0px)`\n  }\n\n  function to(target: Vector1DType): void {\n    if (disabled) return\n    containerStyle.transform = translate(direction.applyTo(target.get()))\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    containerStyle.transform = ''\n  }\n\n  const self: TranslateType = {\n    clear,\n    to,\n    toggleActive,\n  }\n  return self\n}\n","import { Alignment } from './Alignment'\nimport { Animation, AnimationType } from './Animation'\nimport { Axis, AxisType } from './Axis'\nimport { Counter, CounterType } from './Counter'\nimport { Direction, DirectionType } from './Direction'\nimport { DragHandler, DragHandlerType } from './DragHandler'\nimport { DragTracker } from './DragTracker'\nimport { EventEmitterType } from './EventEmitter'\nimport { LimitType } from './Limit'\nimport { OptionsType } from './Options'\nimport { PxToPercent, PxToPercentType } from './PxToPercent'\nimport { ScrollBody, ScrollBodyType } from './ScrollBody'\nimport { ScrollBounds, ScrollBoundsType } from './ScrollBounds'\nimport { ScrollContain } from './ScrollContain'\nimport { ScrollLimit } from './ScrollLimit'\nimport { ScrollLooper, ScrollLooperType } from './ScrollLooper'\nimport { ScrollProgress, ScrollProgressType } from './ScrollProgress'\nimport { ScrollSnap } from './ScrollSnap'\nimport { ScrollTarget, ScrollTargetType } from './ScrollTarget'\nimport { ScrollTo, ScrollToType } from './ScrollTo'\nimport { SlideLooper, SlideLooperType } from './SlideLooper'\nimport { SlideFocus, SlideFocusType } from './SlideFocus'\nimport { SlidesInView, SlidesInViewType } from './SlidesInView'\nimport { SlideSizes } from './SlideSizes'\nimport { Translate, TranslateType } from './Translate'\nimport { arrayKeys, arrayLast, lastIndex } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type Engine = {\n  axis: AxisType\n  direction: DirectionType\n  animation: AnimationType\n  scrollBounds: ScrollBoundsType\n  scrollLooper: ScrollLooperType\n  scrollProgress: ScrollProgressType\n  index: CounterType\n  indexPrevious: CounterType\n  limit: LimitType\n  location: Vector1DType\n  options: OptionsType\n  pxToPercent: PxToPercentType\n  scrollBody: ScrollBodyType\n  dragHandler: DragHandlerType\n  slideFocus: SlideFocusType\n  slideLooper: SlideLooperType\n  slidesInView: SlidesInViewType\n  target: Vector1DType\n  translate: TranslateType\n  scrollTo: ScrollToType\n  scrollTarget: ScrollTargetType\n  scrollSnaps: number[]\n  slideIndexes: number[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  options: OptionsType,\n  events: EventEmitterType,\n): Engine {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction: contentDirection,\n    startIndex,\n    inViewThreshold,\n    loop,\n    speed,\n    dragFree,\n    slidesToScroll,\n    skipSnaps,\n    containScroll,\n  } = options\n\n  // Measurements\n  const containerRect = container.getBoundingClientRect()\n  const slideRects = slides.map((slide) => slide.getBoundingClientRect())\n  const direction = Direction(contentDirection)\n  const axis = Axis(scrollAxis, contentDirection)\n  const pxToPercent = PxToPercent(axis.measureSize(containerRect))\n  const viewSize = pxToPercent.totalPercent\n  const alignment = Alignment(align, viewSize)\n  const { slideSizes, slideSizesWithGaps } = SlideSizes(\n    axis,\n    pxToPercent,\n    slides,\n    slideRects,\n    loop,\n  )\n  const { snaps, snapsAligned } = ScrollSnap(\n    axis,\n    alignment,\n    pxToPercent,\n    containerRect,\n    slideRects,\n    slidesToScroll,\n  )\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps)\n  const { snapsContained } = ScrollContain(\n    viewSize,\n    contentSize,\n    snaps,\n    snapsAligned,\n    containScroll,\n  )\n\n  const contain = !loop && containScroll !== ''\n  const scrollSnaps = contain ? snapsContained : snapsAligned\n  const { limit } = ScrollLimit(contentSize, scrollSnaps, loop)\n\n  // Indexes\n  const index = Counter(lastIndex(scrollSnaps), startIndex, loop)\n  const indexPrevious = index.clone()\n  const slideIndexes = arrayKeys(slides)\n\n  // Draw\n  const update = (): void => {\n    if (!loop) engine.scrollBounds.constrain(engine.dragHandler.pointerDown())\n    engine.scrollBody.seek(target).update()\n    const settled = engine.scrollBody.settle(target)\n\n    if (settled && !engine.dragHandler.pointerDown()) {\n      engine.animation.stop()\n      events.emit('settle')\n    }\n    if (!settled) {\n      events.emit('scroll')\n    }\n    if (loop) {\n      engine.scrollLooper.loop(engine.scrollBody.direction())\n      engine.slideLooper.loop()\n    }\n\n    engine.translate.to(location)\n    engine.animation.proceed()\n  }\n\n  // Shared\n  const animation = Animation(update)\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const scrollBody = ScrollBody(location, speed, 1)\n  const scrollTarget = ScrollTarget(\n    loop,\n    scrollSnaps,\n    contentSize,\n    limit,\n    target,\n  )\n  const scrollTo = ScrollTo(\n    animation,\n    index,\n    indexPrevious,\n    scrollTarget,\n    target,\n    events,\n  )\n  const slidesInView = SlidesInView(\n    viewSize,\n    contentSize,\n    slideSizes,\n    snaps,\n    loop,\n    inViewThreshold,\n  )\n\n  // DragHandler\n  const dragHandler = DragHandler(\n    axis,\n    direction,\n    root,\n    target,\n    dragFree,\n    DragTracker(axis, pxToPercent),\n    location,\n    animation,\n    scrollTo,\n    scrollBody,\n    scrollTarget,\n    index,\n    events,\n    loop,\n    skipSnaps,\n  )\n\n  // Slider\n  const engine: Engine = {\n    animation,\n    axis,\n    direction,\n    dragHandler,\n    pxToPercent,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    options,\n    scrollBody,\n    scrollBounds: ScrollBounds(limit, location, target, scrollBody),\n    scrollLooper: ScrollLooper(contentSize, pxToPercent, limit, location, [\n      location,\n      target,\n    ]),\n    scrollProgress: ScrollProgress(limit),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideFocus: SlideFocus(root, scrollTo, slidesToScroll),\n    slideLooper: SlideLooper(\n      axis,\n      viewSize,\n      contentSize,\n      slideSizesWithGaps,\n      scrollSnaps,\n      slidesInView,\n      location,\n      slides,\n    ),\n    slidesInView,\n    slideIndexes,\n    target,\n    translate: Translate(axis, direction, container),\n  }\n  return engine\n}\n","type CallbackType = (evt: EmblaEventType) => void\ntype ListenersType = Partial<{ [key in EmblaEventType]: CallbackType[] }>\n\nexport type EmblaEventType =\n  | 'init'\n  | 'pointerDown'\n  | 'pointerUp'\n  | 'scroll'\n  | 'select'\n  | 'settle'\n  | 'destroy'\n  | 'reInit'\n  | 'resize'\n\nexport type EventEmitterType = {\n  emit: (evt: EmblaEventType) => EventEmitterType\n  on: (evt: EmblaEventType, cb: CallbackType) => EventEmitterType\n  off: (evt: EmblaEventType, cb: CallbackType) => EventEmitterType\n}\n\nexport function EventEmitter(): EventEmitterType {\n  const listeners: ListenersType = {}\n\n  function getListeners(evt: EmblaEventType): CallbackType[] {\n    const eventListeners = listeners[evt]\n    return eventListeners || []\n  }\n\n  function emit(evt: EmblaEventType): EventEmitterType {\n    getListeners(evt).forEach((e) => e(evt))\n    return self\n  }\n\n  function on(evt: EmblaEventType, cb: CallbackType): EventEmitterType {\n    listeners[evt] = getListeners(evt).concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEventType, cb: CallbackType): EventEmitterType {\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb)\n    return self\n  }\n\n  const self: EventEmitterType = {\n    emit,\n    off,\n    on,\n  }\n  return self\n}\n","import { AlignmentOptionType } from './Alignment'\nimport { AxisOptionType } from './Axis'\nimport { DirectionOptionType } from './Direction'\nimport { ScrollContainOptionType } from './ScrollContain'\n\nexport type OptionsType = {\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  containScroll: ScrollContainOptionType\n  direction: DirectionOptionType\n  dragFree: boolean\n  draggable: boolean\n  draggableClass: string\n  draggingClass: string\n  inViewThreshold: number\n  loop: boolean\n  skipSnaps: boolean\n  selectedClass: string\n  slidesToScroll: number\n  speed: number\n  startIndex: number\n}\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  containScroll: '',\n  direction: 'ltr',\n  dragFree: false,\n  draggable: true,\n  draggableClass: 'is-draggable',\n  draggingClass: 'is-dragging',\n  inViewThreshold: 0,\n  loop: false,\n  skipSnaps: true,\n  selectedClass: 'is-selected',\n  slidesToScroll: 1,\n  speed: 10,\n  startIndex: 0,\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","import { EmblaOptionsType } from './Options'\n\nexport type OptionsPseudoType = {\n  get: () => EmblaOptionsType\n}\n\nexport function OptionsPseudo(node: HTMLElement): OptionsPseudoType {\n  const pseudoString = getComputedStyle(node, ':before').content\n\n  function get(): EmblaOptionsType {\n    try {\n      return JSON.parse(pseudoString.slice(1, -1).replace(/\\\\/g, ''))\n    } catch (error) {} // eslint-disable-line no-empty\n    return {}\n  }\n\n  const self: OptionsPseudoType = {\n    get,\n  }\n  return self\n}\n","import { Engine } from './Engine'\nimport { EventStore } from './EventStore'\nimport { EventEmitter, EmblaEventType, EventEmitterType } from './EventEmitter'\nimport { defaultOptions, EmblaOptionsType } from './Options'\nimport { OptionsPseudo, OptionsPseudoType } from './OptionsPseudo'\nimport { addClass, debounce, removeClass } from './utils'\n\nexport type EmblaCarouselType = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  clickAllowed: () => boolean\n  containerNode: () => HTMLElement\n  dangerouslyGetEngine: () => Engine\n  destroy: () => void\n  off: EventEmitterType['off']\n  on: EventEmitterType['on']\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptionsType) => void\n  rootNode: () => HTMLElement\n  scrollNext: (jump?: boolean) => void\n  scrollPrev: (jump?: boolean) => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number, jump?: boolean) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: (target?: boolean) => number[]\n  slidesNotInView: (target?: boolean) => number[]\n}\n\nfunction EmblaCarousel(\n  sliderRoot: HTMLElement,\n  userOptions?: EmblaOptionsType,\n): EmblaCarouselType {\n  const events = EventEmitter()\n  const eventStore = EventStore()\n  const debouncedResize = debounce(resize, 500)\n  const reInit = reActivate\n  const { on, off } = events\n\n  let engine: Engine\n  let activated = false\n  let optionsBase = Object.assign({}, defaultOptions)\n  let options = Object.assign({}, optionsBase)\n  let optionsPseudo: OptionsPseudoType\n  let rootNodeSize = 0\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  activate(userOptions)\n\n  function setupElements(): void {\n    if (!sliderRoot) throw new Error('Missing root node 😢')\n    const sliderContainer = sliderRoot.querySelector('*')\n    if (!sliderContainer) throw new Error('Missing container node 😢')\n\n    container = sliderContainer as HTMLElement\n    slides = Array.prototype.slice.call(container.children)\n    optionsPseudo = OptionsPseudo(sliderRoot)\n  }\n\n  function activate(partialOptions?: EmblaOptionsType): void {\n    setupElements()\n    optionsBase = Object.assign({}, optionsBase, partialOptions)\n    options = Object.assign({}, optionsBase, optionsPseudo.get())\n    engine = Engine(sliderRoot, container, slides, options, events)\n    eventStore.add(window, 'resize', debouncedResize)\n    engine.translate.to(engine.location)\n    rootNodeSize = engine.axis.measureSize(sliderRoot.getBoundingClientRect())\n\n    if (options.loop) {\n      if (!engine.slideLooper.canLoop()) {\n        deActivate()\n        return activate({ loop: false })\n      }\n      engine.slideLooper.loop()\n    }\n    if (options.draggable && container.offsetParent && slides.length) {\n      engine.dragHandler.addActivationEvents()\n      if (options.draggableClass) {\n        addClass(sliderRoot, options.draggableClass)\n      }\n      if (options.draggingClass) {\n        events\n          .on('pointerDown', toggleDraggingClass)\n          .on('pointerUp', toggleDraggingClass)\n      }\n    }\n    if (slides.length) {\n      engine.slideFocus.addActivationEvents(slides)\n    }\n    if (options.selectedClass) {\n      toggleSelectedClass()\n      events\n        .on('select', toggleSelectedClass)\n        .on('pointerUp', toggleSelectedClass)\n    }\n    if (!activated) {\n      setTimeout(() => events.emit('init'), 0)\n      activated = true\n    }\n  }\n\n  function toggleDraggingClass(evt: EmblaEventType): void {\n    const { draggingClass } = options\n    if (evt === 'pointerDown') addClass(sliderRoot, draggingClass)\n    else removeClass(sliderRoot, draggingClass)\n  }\n\n  function toggleSelectedClass(): void {\n    const { selectedClass } = options\n    const inView = slidesInView(true)\n    const notInView = slidesNotInView(true)\n    notInView.forEach((index) => removeClass(slides[index], selectedClass))\n    inView.forEach((index) => addClass(slides[index], selectedClass))\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.removeAllEvents()\n    engine.slideFocus.removeAllEvents()\n    engine.animation.stop()\n    eventStore.removeAll()\n    engine.translate.clear()\n    engine.slideLooper.clear()\n    removeClass(sliderRoot, options.draggableClass)\n    slides.forEach((slide) => removeClass(slide, options.selectedClass))\n    events\n      .off('select', toggleSelectedClass)\n      .off('pointerUp', toggleSelectedClass)\n      .off('pointerDown', toggleDraggingClass)\n      .off('pointerUp', toggleDraggingClass)\n  }\n\n  function reActivate(partialOptions?: EmblaOptionsType): void {\n    if (!activated) return\n    const startIndex = selectedScrollSnap()\n    const newOptions = Object.assign({ startIndex }, partialOptions)\n    deActivate()\n    activate(newOptions)\n    events.emit('reInit')\n  }\n\n  function destroy(): void {\n    if (!activated) return\n    deActivate()\n    activated = false\n    events.emit('destroy')\n  }\n\n  function resize(): void {\n    if (!activated) return\n    const size = engine.axis.measureSize(sliderRoot.getBoundingClientRect())\n    if (rootNodeSize !== size) reActivate()\n    events.emit('resize')\n  }\n\n  function slidesInView(target?: boolean): number[] {\n    const location = engine[target ? 'target' : 'location'].get()\n    const type = options.loop ? 'removeOffset' : 'constrain'\n    return engine.slidesInView.check(engine.limit[type](location))\n  }\n\n  function slidesNotInView(target?: boolean): number[] {\n    const inView = slidesInView(target)\n    return engine.slideIndexes.filter((index) => inView.indexOf(index) === -1)\n  }\n\n  function scrollTo(index: number, jump?: boolean, direction?: number): void {\n    engine.scrollBody.useBaseMass().useSpeed(jump ? 100 : options.speed)\n    if (activated) engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(jump?: boolean): void {\n    const next = engine.index.clone().add(1)\n    scrollTo(next.get(), jump === true, -1)\n  }\n\n  function scrollPrev(jump?: boolean): void {\n    const prev = engine.index.clone().add(-1)\n    scrollTo(prev.get(), jump === true, 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.clone().add(1)\n    return next.get() !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.clone().add(-1)\n    return prev.get() !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnaps.map(engine.scrollProgress.get)\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function clickAllowed(): boolean {\n    return engine.dragHandler.clickAllowed()\n  }\n\n  function dangerouslyGetEngine(): Engine {\n    return engine\n  }\n\n  function rootNode(): HTMLElement {\n    return sliderRoot\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarouselType = {\n    canScrollNext,\n    canScrollPrev,\n    clickAllowed,\n    containerNode,\n    dangerouslyGetEngine,\n    destroy,\n    off,\n    on,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView,\n  }\n  return self\n}\n\nexport default EmblaCarousel\n","export const autoplay = (embla, interval) => {\n    let timer = 0;\n  \n    const play = () => {\n      stop();\n      requestAnimationFrame(() => (timer = window.setTimeout(next, interval)));\n    };\n  \n    const stop = () => {\n      window.clearTimeout(timer);\n      timer = 0;\n    };\n  \n    const next = () => {\n      if (embla.canScrollNext()) {\n        embla.scrollNext();\n      } else {\n        embla.scrollTo(0);\n      }\n      play();\n    };\n  \n    return { play, stop };\n  };\n  ","export const listenForPrevBtnClick = (btn, embla, autoplayer) => {\n  const scrollPrev = () => {\n    autoplayer.stop();\n    embla.scrollPrev();\n  };\n  btn.addEventListener(\"click\", scrollPrev, false);\n};\n\nexport const listenForNextBtnClick = (btn, embla, autoplayer) => {\n  const scrollNext = () => {\n    autoplayer.stop();\n    embla.scrollNext();\n  };\n  btn.addEventListener(\"click\", scrollNext, false);\n};\n\nexport const disablePrevNextBtns = (prevBtn, nextBtn, embla) => {\n  return () => {\n    if (embla.canScrollPrev()) prevBtn.removeAttribute(\"disabled\");\n    else prevBtn.setAttribute(\"disabled\", \"disabled\");\n\n    if (embla.canScrollNext()) nextBtn.removeAttribute(\"disabled\");\n    else nextBtn.setAttribute(\"disabled\", \"disabled\");\n  };\n};\n","import EmblaCarousel from \"embla-carousel\";\nimport { autoplay } from \"./autoplay\";\nimport {\n  disablePrevNextBtns,\n  listenForPrevBtnClick,\n  listenForNextBtnClick\n} from \"./prevAndNextButtons\";\nimport \"../css/base.css\";\nimport \"../css/reset.css\";\nimport \"../css/embla.css\";\n\n\nconst wrap = document.querySelector(\".embla\");\nconst viewPort = wrap.querySelector(\".embla__viewport\");\nconst prevBtn = wrap.querySelector(\".embla__button--prev\");\nconst nextBtn = wrap.querySelector(\".embla__button--next\");\nconst embla = EmblaCarousel(viewPort, { skipSnaps: false });\nconst autoplayer = autoplay(embla, 4000);\nconst disablePrevAndNextBtns = disablePrevNextBtns(prevBtn, nextBtn, embla);\n\nlistenForPrevBtnClick(prevBtn, embla, autoplayer);\nlistenForNextBtnClick(nextBtn, embla, autoplayer);\n\nembla.on(\"select\", disablePrevAndNextBtns);\nembla.on(\"init\", disablePrevAndNextBtns);\n\nembla.on(\"pointerDown\", autoplayer.stop);\nembla.on(\"init\", autoplayer.play);"]}